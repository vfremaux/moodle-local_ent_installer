<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

$string['ent_installer:sync'] = 'Can sync manually the users.';
$string['ent_installer:systemassign'] = 'Can assign system context roles.';

// Privacy.
$string['privacy:metadata'] = 'The local plugin ENT Installer does not directly store any personal data about any user.';

$string['automation'] = 'Moodle data synchronisations';
$string['automatedcohortmembers'] = 'Automated cohort members';
$string['backtocohorts'] = 'Back to cohorts';
$string['backtosettings'] = 'Back to settings';
$string['backtosite'] = 'Back to site';
$string['bycity'] = 'By City';
$string['byid'] = 'By ID';
$string['byname'] = 'By Name';
$string['cleaningautomatedcohortscontent'] = 'Cleaning {$a} automated cohorts content';
$string['clear'] = 'Clear';
$string['cohort'] = 'Cohort';
$string['cohorts'] = 'Cohorts';
$string['courses'] = 'Courses';
$string['coursecats'] = 'Course categories';
$string['configadminssitecohortname'] = 'Name for the global admins cohort';
$string['configadminssitecohortname_desc'] = '';
$string['configadminstaffsitecohortname'] = 'Name for the global site admin staff cohort';
$string['configadminstaffsitecohortname_desc'] = '';
$string['configauxgroupnamefilter'] = 'Filter for moodle auxiliary group name';
$string['configauxgroupnamefilter_desc'] = 'A regexp content for capturing the group name. Result wil be prefixed by millesim.';
$string['configbuildteachercategory'] = 'Build teacher category';
$string['configbuildteachercategory_desc'] = 'If enabled, a teacher dedicated category will be built in the teachers workplaces category for each new teacher imported.';
$string['configcohortindex'] = 'Cohort index';
$string['configcohortindex_desc'] = 'This index will be prepended to all generated cohorts. You shall change this prefix when a course session switches to a new session.';
$string['configcohortsortprefixlength'] = 'Cohort sort prefix length';
$string['configcohortsortprefixlength_desc'] = 'Length of the cohort prefix that will be tested for sorting';
$string['configcompositeseparator'] = 'Composite separator';
$string['configcompositeseparator_desc'] = 'Defines the global seprarator for composite elements syntax. Composites are elements holding several values in a set.';
$string['configlistseparator'] = 'List separator';
$string['configlistseparator_desc'] = 'Defines the global seprarator for list elements.';
$string['configcreatecohortsfromuserrecords'] = 'Create cohorts from users';
$string['configcreatecohortsfromuserrecords_desc'] = 'Create cohorts from user records, using the standard ENT field ENTClasses. Do not use this option when the annuary can provide full groups/cohorts descriptions';
$string['configcreatestaffsitecohort'] = 'Create the global site staff cohort';
$string['configcreatestaffsitecohort_desc'] = '';
$string['configcreateadminstaffsitecohort'] = 'Create the global site admin staff cohort';
$string['configcreateadminstaffsitecohort_desc'] = '';
$string['configcreatestudentssitecohort'] = 'Create the global site students cohort';
$string['configcreatestudentssitecohort_desc'] = '';
$string['configcronenable'] = 'Enable cron processing';
$string['configcronenable_desc'] = 'Enable processing users integration using Moodle cron. disable this option if you plan to cron yourself the user loading using CLI script.';
$string['configcrontime'] = 'Time for running cron';
$string['configenroldeans'] = 'Enrol deans';
$string['configenroldeans_desc'] = 'If enabled, enrols deans as \'DIR\' identified ENTPersonFonctions';
$string['configentuserinfoattributes'] = 'LDAP attribute list for full profile feeding';
$string['configentuserinfoattributes_desc'] = 'A coma separated list of attributes to retreive in profile';
$string['configfakemaildomain'] = 'Autogenerated mail domain';
$string['configfakemaildomain_desc'] = ' all generated mails when mail is missing in incomming profiles will be on this domain';
$string['configgetid'] = 'Structure ID';
$string['configgetinstitutionidservice'] = 'Get a structure ID';
$string['configinitialcategories'] = 'Initial site categories';
$string['configinitialcategories_desc'] = 'A json description of categories the ent_installer must ensure they exist and are bound to some plugin\'s settings.';
$string['configinstallcategories'] = 'install initial categories';
$string['configinstallcats'] = 'Categories';
$string['configinstitutionid'] = 'Institution ID';
$string['configinstitutionid_desc'] = 'The Education system school id';
$string['configlastsyncdate'] = 'Last synchro';
$string['configlastsyncdate_desc'] = 'Last synchonisation date. If you change this, the next synchronisation will condsider all users changed or created since this date';
$string['configmailcheckusers'] = 'Mail check users';
$string['configmailcheckusers_desc'] = 'List of user ids or usernames to send a process check email to.';
$string['configmaildisplay'] = 'Initial mail visibility';
$string['configmaildisplay_desc'] = 'The initial mail visibility profile setting for new synced users.';
$string['configrealauth'] = 'Real authentication';
$string['configrealauth_desc'] = 'This setting sets the real authentication method that will assigned to imported users, whatever the auth scheme used for import (hardlinked to LDAP)';
$string['configrecorddatefieldname'] = 'Time modified LDAP fieldname';
$string['configrecorddatefieldname_desc'] = 'The LDAP field name providing the LastModifiedTimestamp';
$string['configstaffsitecohortname'] = 'Name for the global site staff cohort';
$string['configstaffsitecohortname_desc'] = '';
$string['configstudentssitecohortname'] = 'Name for the global student cohort';
$string['configstudentssitecohortname_desc'] = '';
$string['configsynccohortsenable'] = 'Enable cohorts';
$string['configsynccohorttocourseenable'] = 'Enable cohort to course bindings';
$string['configsyncenable'] = 'Enable';
$string['configsyncenable_desc'] = 'enables the synchronisation script (CLI). If disabled, the sync script will have no effect at all, even if lauched by cron.';
$string['configsyncgroupsenable'] = 'Enable course groups';
$string['configsyncsystemrolesenable'] = 'Enable system roles attribution';
$string['configsyncusersenable'] = 'Enable user accounts';
$string['configteachermaskfirstname'] = 'Mask teacher firstname';
$string['configteachermaskfirstname_desc'] = 'If checked the first name will be reduced to initals in category name';
$string['configteacherstubcategory'] = 'Teacher course stub category';
$string['configteacherstubcategory_desc'] = 'The category holding all teacher course stubs';
$string['configupdateinstitutionstructure'] = 'Update institution structure';
$string['configupdateinstitutionstructure_desc'] = 'If enabled, the academic structure of the institution will be updated.';
$string['configtimestampformat'] = 'Timestamp format';
$string['configtimestampformat_desc'] = 'Choose between Unix or Active Directory format (YYYYMMDDHHIISS.TZ)';
$string['configtimestampshift'] = 'Timestamp forth shift delay';
$string['configtimestampshift_desc'] = 'A delay in seconds added to ldap incoming times';
<<<<<<< HEAD
=======
$string['configprocessauxgroups'] = 'process auxiliary groups';
$string['configprocessauxgroups_desc'] = 'Process the ENSAuxEnsGroupes field to forge auxiliary cohorts';
>>>>>>> MOODLE_39_STABLE
$string['coursefilters'] = 'Course filter';
$string['coursegroups'] = 'Course groups';
$string['datasync'] = 'ENT Data Synchronisation';
$string['datasyncsettings'] = 'ENT Data Synchronisation Settings';
$string['dbinsertuser'] = 'ALIM : User creation {$a->username} - [{$a->idnumber}] user type : {$a->usertype} / {$a->function}';
$string['dbinsertusersimul'] = 'SIMULATION : User creation {$a->username} - [{$a->idnumber}] user type : {$a->usertype} / {$a->function}';
$string['dbskipnewuser'] = 'SKIPPED : New user skipped {$a->username} - [{$a->idnumber}] user type : {$a->usertype} / {$a->function}';
$string['dbskipnewusersimul'] = 'SIMULATION SKIPPED : New user skipped {$a->username} - [{$a->idnumber}] user type : {$a->usertype} / {$a->function}';
$string['dbupdateuser'] = 'ALIM : User update (guess status : {$a->status}) or complete {$a->username} - [{$a->idnumber}] user type : {$a->usertype} / {$a->function}';
$string['dbupdateusersimul'] = 'SIMULATION : User update (guess status : {$a->status}) or complete {$a->username} - [{$a->idnumber}] user type : {$a->usertype} / {$a->function}';
$string['defaultarchivecatname'] = 'Archives';
$string['didntgetcohortsfromldap'] = 'Did not get any cohort from LDAP. Stopping process.';
$string['didntgetusersfromldap'] = 'Did not get any user from LDAP. Stopping process.';
$string['doit'] = 'Do it really!';
$string['emptygroups'] = 'Empty groups';
$string['emulatecommunity'] = 'Emulate the community version.';
$string['emulatecommunity_desc'] = 'Switches the code to the community version. The result will be more compatible, but some features will not be available anymore.';
$string['enrolled'] = 'Enrolled with method {$a}';
$string['enrolmethod'] = 'Enrol plugin';
$string['entities'] = 'Entities';
$string['entupdate'] = 'Update ENT definitions';
$string['filter'] = 'Filter';
$string['finaloperations'] = 'Final cleanup operations';
$string['force'] = 'Force updating all entries (even unmodified since last reference)';
$string['forcedebugwarning'] = 'You cannot run the complete synchrosnisation in developer debugging mode as ldap fetched set is incomplete.';
$string['getinstitutionidservice'] = 'Structure ID Search';
$string['generals'] = 'General settings';
$string['id'] = 'Structure Identifier';
$string['inserterrors'] = 'Insert errors';
$string['inserts'] = 'Inserts (records added)';
$string['installcats'] = 'site initial categories installation';
$string['lastrun'] = 'Last run on {$a}';
$string['lasttime'] = 'Last run time';
$string['licensestatus'] = 'Pro License status';
$string['licenseprovider'] = 'Pro License provider';
$string['licenseprovider_desc'] = 'Input here your provider key';
$string['licensekey'] = 'Pro license key';
$string['licensekey_desc'] = 'Input here the product license key you got from your provider';
$string['maxduration'] = 'Max sync duration';
$string['meantime'] = 'Mean syncing time';
$string['mergesiteadmins'] = 'Update site admins to {$a}';
$string['minduration'] = 'Min sync duration';
$string['miscsettings'] = 'Miscellaneous settings';
$string['module'] = 'Course module';
$string['moodleid'] = 'Moodle primary id';
$string['noenrol'] = 'None';
$string['noresults'] = 'No results';
$string['normalmeantime'] = 'Normal mean (wo overtimes)';
$string['nothingtodo'] = 'No data to process';
$string['nousers'] = 'No users in cohort';
$string['onceaday'] = 'daily';
$string['onceamonth'] = 'monthly';
$string['onceaweek'] = 'weekly';
$string['options'] = 'Processing options';
$string['othercommands'] = 'Other commands';
$string['overtime'] = 'Overtimes';
$string['overtimes'] = 'Overtimes (> {$a} secs)';
<<<<<<< HEAD
$string['plugindist'] = 'Plugin distribution';
=======
$string['oldcohortdeleted'] = 'Old cohort {$a} deleted';
>>>>>>> MOODLE_39_STABLE
$string['pluginname'] = 'Installation Moodle ENT';
$string['purgeobsoletecohorts'] = 'Delete obsolete cohorts';
$string['refreshsitemetadata'] = 'Reset site metadata';
$string['relocatingcourse'] = 'Relocating course {$a}.';
$string['relocatingcourseignored'] = 'Course {$a} ignored (protected category).';
$string['reset'] = 'Reset stats data';
$string['resetzoom'] = 'Reset zoom factor';
$string['resetallvnodes'] = 'Reset stats data in all nodes';
$string['revivingdeletedorsuspended'] = 'Reviving suspended or deleted users';
$string['roleassigns'] = 'Role assignments';
$string['runsync'] = 'Run synchro';
$string['search'] = 'Search';
$string['seedetail'] = '(See user list)';
$string['simulate'] = 'Simulate mode';
$string['sitecategories'] = 'Site categories';
$string['structuresearch'] = 'Structure search settings';
$string['syncbench'] = 'Sync time measurement';
$string['syncbenchreport_desc'] = 'A <a href="{$a}">report about user synchronisation benching</a>';
$string['synccohortsdisabled'] = 'ENT Cohorts sync is disabled on this site';
$string['syncdisabled'] = 'ENT Data sync is disabled on this site';
$string['syncgroupsdisabled'] = 'ENT Course Groups sync is disabled on this site';
$string['synchronisemoodle'] = 'Synchronize moodle';
$string['syncroleassignsdisabled'] = 'ENT Role Assignments sync is disabled on this site';
$string['syncsingleuser'] = 'Sync single user';
$string['syncsinglecourse'] = 'Sync single course';
$string['syncsinglecohort'] = 'Sync single cohort';
$string['synctime'] = 'Sync time';
$string['synctimes'] = 'Sync times';
$string['synctimetitle'] = 'User Sync Time Measurement';
$string['syncusers'] = 'Synchro';
$string['syncusers_desc'] = '<a href="{$a}">Launch a manual synchronisation</a>';
$string['syncusersdisabled'] = 'ENT Users sync is disabled on this site';
$string['teachercatreorder'] = 'Reorder teacher categories';
$string['relocateteachercourses'] = 'Relocate teacher courses in owned category';
$string['unenrolled'] = 'Unenrolled from method {$a}';
$string['updateerrors'] = 'Updates errors';
<<<<<<< HEAD
=======
$string['usefilternotice'] = 'More than 200 users in the list. Use filter to reduce.';
>>>>>>> MOODLE_39_STABLE
$string['doall'] = 'Do all operations.';
$string['createonly'] = 'Only create new records.';
$string['updateonly'] = 'Only update existing records. Do not create any more.';
$string['deleteonly'] = 'Only delete old discarded records.';
<<<<<<< HEAD
$string['updates'] = 'Updates (users updated)';
=======
$string['updates'] = 'Updates (records updated)';
>>>>>>> MOODLE_39_STABLE
$string['updatingusers'] = 'Updating user (attributes only)';
$string['users'] = 'User accounts';
$string['usersdeletion'] = 'Users deletion';
$string['verbose'] = 'Verbose mode';
$string['wsallhosts'] = 'Fetch for all hosts (vmoodle)';
$string['wsdateformat'] = 'Date format';
$string['wsentsyncdate'] = 'Users sync last date';
$string['wslastcron'] = 'Site known last cron time';
$string['wssetting'] = 'Setting to monitor';
$string['unalias'] = 'Use individual institution ids';
$string['usealias'] = 'Use only alias rather than institution ids';
$string['addalias'] = 'Add alias to institution list';
$string['nothingdone'] = 'No processing';

$string['personfilters'] = 'LDAP Filters for user profiles';
$string['configgenericusertypefilter'] = 'Generic user discriminator';
$string['configinstitutionaliasing'] = 'Institution aliasing';
$string['configinstitutionaliasing_desc'] = 'Use of the institution alias when scanning for users.';
$string['configgenericusertypefilter_desc'] = '';
$string['configgenericinstitutionfilter'] = 'Generic institution discriminator';
$string['configgenericinstitutionfilter_desc'] = '';
$string['configstudentusertypefilter'] = 'Student user discriminator';
$string['configstudentusertypefilter_desc'] = '';
$string['configstudentinstitutionfilter'] = 'Student institution discriminator';
$string['configstudentinstitutionfilter_desc'] = '';
$string['configteachstaffusertypefilter'] = 'Teacher user discriminator';
$string['configteachstaffusertypefilter_desc'] = '';
$string['configteachstaffinstitutionfilter'] = 'Teacher institution discriminator';
$string['configteachstaffinstitutionfilter_desc'] = '';
$string['configadminstaffusertypefilter'] = 'Administrative user discriminator';
$string['configadminstaffusertypefilter_desc'] = '';
$string['configadminstaffinstitutionfilter'] = 'Administrative institution discriminator';
$string['configadminstaffinstitutionfilter_desc'] = '';
$string['configsiteadminsinstitutionfilter'] = 'Site admins institution discriminator';
$string['configsiteadminsinstitutionfilter_desc'] = '';
$string['configsiteadminsusertypefilter'] = 'Site administrators discriminator';
$string['configsiteadminsusertypefilter_desc'] = '';
$string['configstudentcohortuserfield'] = 'User cohort field';
$string['configstudentcohortuserfield_desc'] = '';
$string['configstudentcohortuserfieldfilter'] = 'User cohort field extractor';
$string['configstudentcohortuserfieldfilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configstudenttransportuserfield'] = 'User transport field';
$string['configstudenttransportuserfield_desc'] = 'Ldap field telling the transportation mode of the user';
$string['configstudenttransportuserfieldfilter'] = 'User transport field extractor';
$string['configstudenttransportuserfieldfilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configstudentregimeuserfield'] = 'User regime field';
$string['configstudentregimeuserfield_desc'] = 'Ldap field telling the regime of the user';
$string['configstudentregimeuserfieldfilter'] = 'User regime field extractor';
$string['configstudentregimeuserfieldfilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configstudentfullageuserfield'] = 'User Full Age field';
$string['configstudentfullageuserfield_desc'] = 'Ldap field telling if the user is full legal age';
$string['configstudentfullageuserfieldfilter'] = 'User full age field extractor';
$string['configstudentfullageuserfieldfilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configuserpicturefield'] = 'User picture field';
$string['configuserpicturefield_desc'] = 'Ldap field giving info about user picture name, for building a retrieval url.';
$string['configuserpicturefilter'] = 'User picture info filter';
$string['configuserpicturefilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configuserpictureurlpattern'] = 'User picture url pattern';
$string['configuserpictureurlpattern_desc'] = 'An pattern for producing an URL using the %PICTURE% info result of the above extraction';
$string['configprotectcategoriesfromrelocate'] = 'Protected categories';
$string['configprotectcategoriesfromrelocate_desc'] = 'Give a coma separated list of ids of moodle course categories in which courses MUST NOT be moved to teacher standard category.';

// Cohorts.

$string['cohortsfilters'] = 'Cohort LDAP filters';

$string['configcohortcontexts'] = 'Cohort contexts';
$string['configcohortcontexts_desc'] = 'Contexts where to find cohort groups. Several contexts can be given separated with ;';
$string['configcohortcoursebindingattribute'] = 'Ldap attribute for course binding';
$string['configcohortcoursebindingattribute_desc'] = 'A LDAP attribute that holds a course id or a list of ocurseids to bind this cohort with.';
$string['configcohortcoursebindingidentifier'] = 'Course identifier for binding';
$string['configcohortcoursebindingidentifier_desc'] = 'The moodle course filed that is used as course identifier reference.';
$string['configcohortobjectclass'] = 'Cohort object classes filter';
$string['configcohortobjectclass_desc'] = 'Object class that are legitimate for cohort description';
$string['configcohortidattribute'] = 'Cohort id (ldapside)';
$string['configcohortidattribute_desc'] = 'Attribute for searching one cohort record by id';
$string['configcohortselectorfilter'] = 'Cohort selection filter';
$string['configcohortselectorfilter_desc'] = 'A LDAP filter for getting cohort identifiers. Accepts a %ID% placeholder for the institution ID. If several institution ids are associated, the filter will play for each ID.';
$string['configcohortidpattern'] = 'Cohort id pattern';
$string['configcohortidpattern_desc'] = 'A replaceable pattern for building the external cohort id from internal info. Accepts %ID% (institution id= and %CID% (internal cohort id) replacements';
$string['configcohortidnumberattribute'] = 'Attribute for cohort IDNumber';
$string['configcohortidnumberattribute_desc'] = 'Ldap field for the cohort IDNumber';
$string['configcohortidnumberfilter'] = 'Filter to extract cohort IDnumber';
$string['configcohortidnumberfilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configcohortnameattribute'] = 'Attribute for cohort name';
$string['configcohortnameattribute_desc'] = 'Ldap field for the cohort name';
$string['configcohortnamefilter'] = 'Filter to extract cohort name';
$string['configcohortnamefilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configcohortdescriptionattribute'] = 'Attribute for description';
$string['configcohortdescriptionattribute_desc'] = 'Ldap field for the cohort description';
$string['configcohortmembershipattribute'] = 'Attribute for membership';
$string['configcohortmembershipattribute_desc'] = 'Ldap field for finding users in cohort';
$string['configcohortmembershipfilter'] = 'Filter for membership';
$string['configcohortmembershipfilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configcohortuseridentifier'] = 'Internal cohort user identifier';
$string['configcohortuseridentifier_desc'] = 'Internal user field used as user identifier reference for finding user ID';
$string['configcohortuseridentifierlocked_desc'] = 'Internal user field used as user identifier reference for finding user ID.
The value is locked by the auth/ldap configuration current choice for "membership as DN".';
$string['configcohortoldprefixes'] = 'Old prefixes';
$string['configcohortoldprefixes_desc'] = 'Prefixes (coma separated) of cohorts to delete by idnumber';
$string['configcohorthardcohortunenrol'] = 'Unenrol cohort mode';
$string['configcohorthardcohortunenrol_desc'] = 'What will happen when a cohort is unenrolled from course. When using soft method, enrol method is disabled and enrolments are kept with all user data and group assignations. When using hard unenrol, method is destroyed and all relevant membership so are user data in course.';
$string['id'] = 'Primary id';

<<<<<<< HEAD
=======
$string['configsynccohorttocourseenable_desc'] = 'Enable cohort to course bindings synchronisation, generating cohort enrol methods. Beware that manual setup of cohort synchronisations cannot be preserved, unless the binding has been reported in the external reference data source.';

>>>>>>> MOODLE_39_STABLE
$string['cohortbindings'] = 'Cohorts to course bindings';
$string['cohortnobindings'] = 'No cohort bindings';
$string['deletingcohorts'] = 'Deleting old cohorts';
$string['creatingcohorts'] = 'Creating new cohorts';
$string['updatingcohorts'] = 'Updating existing cohorts';
$string['cohortdeleted'] = 'Cohort {$a} deleted';
$string['cohortcreated'] = 'Cohort {$a->name} [{$a->idnumber}] created';
$string['cohortupdated'] = 'Cohort {$a->name} updated. Idnumber set to {$a->idnumber}';
$string['cohortmemberadded'] = 'Cohort member {$a->username} [{$a->uidnumber}] added to cohort {$a->idnumber}';
$string['cohortmemberexists'] = 'Cohort member {$a->username} [{$a->uidnumber}] exists in cohort {$a->idnumber}. Keeping.';
$string['cohortmemberremoved'] = 'Cohort member {$a->username} [{$a->uidnumber}] removed from cohort {$a->idnumber}';
$string['cohortbindingadded'] = 'Cohort enrol method added for cohort {$a->idnumber} in course {$a->shortname} [{$a->cidnumber}] with role {$a->role}';
$string['cohortbindingexists'] = 'Cohort enrol method exists for cohort {$a->idnumber} in course {$a->shortname} [{$a->cidnumber}]. Keeping role {$a->role}';
$string['cohortbindingremoved'] = 'Cohort enrol method for cohort {$a->idnumber} removed from course {$a->shortname} [{$a->cidnumber}] with role {$a->role}';
$string['cohortbindingenabled'] = 'Cohort enrol method enabled for cohort {$a->idnumber} in course {$a->shortname} [{$a->cidnumber}] with role {$a->role}.';
$string['cohortbindingdisabled'] = 'Cohort enrol method disabled for cohort {$a->idnumber} in course {$a->shortname} [{$a->cidnumber}] with role {$a->role}.';
$string['disableautocohortscheck'] = 'Disable autocohort check';
$string['removingoldcohort'] = 'Removing obsolete cohort {$a->id} {$a->name}';
<<<<<<< HEAD
=======
$string['removingoldcohorts'] = 'Removing obsolete cohorts';
>>>>>>> MOODLE_39_STABLE

// Role assignments.

$string['roleassignsfilters'] = 'Role assignments LDAP filters';

$string['configsyncroleassignsenable'] = 'Enables role assigns synchronisation';
$string['configsyncroleassignsenable_desc'] = '';
$string['configroleassigncontexts'] = 'Role assignments contexts';
$string['configroleassigncontexts_desc'] = 'Contexts where to find role assignment sets. Several contexts can be given separated with ;';
$string['configroleassignusealias'] = 'Use institution alias';
$string['configroleassignusealias_desc'] = 'If activated, will run once the sync on the alias name';
$string['configroleassignobjectclass'] = 'Role assignment object classes filter';
$string['configroleassignobjectclass_desc'] = 'Object class that are legitimate for role assignment description';
$string['configroleassignidattribute'] = 'Role assignment id';
$string['configroleassignidattribute_desc'] = 'LDAP Attribute for searching one role assignment record by id. Usually the DN.';
$string['configroleassignselectorfilter'] = 'Role assignment selection filter';
$string['configroleassignselectorfilter_desc'] = 'A LDAP filter for getting role assignment entries. Accepts a %ID% placeholder for the institution ID. If several institution ids are associated, the filter will play for each ID.';
$string['configroleassignroleattribute'] = 'Attribute for roleassign role';
$string['configroleassignroleattribute_desc'] = 'LDAP attribute for the roleassign role. this attribute will contain an input value to a mapping table that maps to moodle internal role shortnames.';
$string['configroleassignrolefilter'] = 'Filter to extract roleassign role info';
$string['configroleassignrolefilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configroleassignrolemapping'] = 'Mapping table to transcode role names from LDAP to Moodle';
$string['configroleassignrolemapping_desc'] = 'A mapping table given as a list of pairs, one per line, in the "in => out" format. Leading and trailing spaces are trimmed.';
$string['configroleassigncontextlevelattribute'] = 'Attribute for role assignment contextlevel';
$string['configroleassigncontextlevelattribute_desc'] = 'LDAP attribute containing an information about context level';
$string['configroleassigncontextlevelfilter'] = 'Filter to extract context level key';
$string['configroleassigncontextlevelfilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configroleassigncontextlevelmapping'] = 'Mapping table to transcode context levels from LDAP to Moodle';
$string['configroleassigncontextlevelmapping_desc'] = 'A mapping table given as a list of pairs, one per line, in the "in => out" format. Leading and trailing spaces are trimmed.';
$string['configroleassigncontextattribute'] = 'Attribute for the role assignment context';
$string['configroleassigncontextattribute_desc'] = 'LDAP attribute for the role assignment target context key.';
$string['configroleassigncontextfilter'] = 'Filter to extract the context key';
$string['configroleassigncontextfilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configroleassigncoursecatkey'] = 'Course category key';
$string['configroleassigncoursecatkey_desc'] = 'Moodle field for finding course categories.';
$string['configroleassigncoursekey'] = 'Course key';
$string['configroleassigncoursekey_desc'] = 'Moodle field for finding a course.';
$string['configroleassignmodulekey'] = 'Course module key';
$string['configroleassignmodulekey_desc'] = 'Moodle field for finding a course module.';
$string['configroleassignblockkey'] = 'Block key';
$string['configroleassignblockkey_desc'] = 'Moodle field for finding a block.';
$string['configroleassigntargetuserkey'] = 'Target user key';
$string['configroleassigntargetuserkey_desc'] = 'Moodle field for finding the target user context.';
$string['configroleassignuserkey'] = 'Assigned user key';
$string['configroleassignuserkey_desc'] = 'Moodle field that identifies user for assignment';
$string['configroleassignuserkeylocked_desc'] = 'Internal user field used as user identifier reference for finding user ID.
The value is locked by the auth/ldap configuration current choice for "membership as DN".';
$string['configroleassignmembershipattribute'] = 'Attribute for assigned users';
$string['configroleassignmembershipattribute_desc'] = 'Ldap field for finding users in role assignment';
$string['configroleassignmembershipfilter'] = 'Filter for membership';
$string['configroleassignmembershipfilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configroleassignenrolmethod'] = 'Enrol method';
$string['configroleassignenrolmethod_desc'] = 'If defined, will enrol user with required method in addition to role setting. This applies only in course context.';

$string['noenrol'] = 'Assign roles without enrolling';
$string['deletingroleassigns'] = 'Unassigning roles';
$string['creatingroleassigns'] = 'Assigning roles';
$string['unchangedroleassigns'] = 'Unchanged roles';
$string['roleassigned'] = 'Assign role {$a->roleinfo} for {$a->userinfo} on context {$a->contextinfo}';
$string['roleunassigned'] = 'Unassign role {$a->roleinfo} for {$a->userinfo} on context {$a->contextinfo}';
$string['norolechange'] = 'No change {$a->roleinfo} for {$a->userinfo} on context {$a->contextinfo}';

// Groups.

$string['groupsfilters'] = 'Course groups LDAP filters';

$string['configgroupcontexts'] = 'Group contexts';
$string['configgroupcontexts_desc'] = 'Contexts where to find group groups. Several contexts can be given separated with ;';
$string['configgroupautonameprefix'] = 'Group auto name prefix';
$string['configgroupautonameprefix_desc'] = 'A prefix applied to group names when created automatically';
$string['configgroupobjectclass'] = 'group object classes filter';
$string['configgroupobjectclass_desc'] = 'Object class that are legitimate for group description';
$string['configgroupidattribute'] = 'group id (ldapside)';
$string['configgroupidattribute_desc'] = 'Attribute for searching one group record by id';
$string['configgroupselectorfilter'] = 'group selection filter';
$string['configgroupselectorfilter_desc'] = 'A LDAP filter for getting group identifiers. Accepts a %ID% placeholder for the institution ID. If several institution ids are associated, the filter will play for each ID.';
$string['configgroupidpattern'] = 'group id pattern';
$string['configgroupidpattern_desc'] = 'A replaceable pattern for building the external group id from internal info. Accepts %ID% (institution id= and %GID% (group idnumber), %CID% (course id), %CSHORTNAME%,  replacements';
$string['configgroupidnumberattribute'] = 'Attribute for group IDNumber';
$string['configgroupidnumberattribute_desc'] = 'Ldap field for the group IDNumber';
$string['configgroupidnumberfilter'] = 'Filter to extract group IDnumber';
$string['configgroupidnumberfilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configgroupnameattribute'] = 'Group name ldap attribute';
$string['configgroupnameattribute_desc'] = 'LDAP attribute where to extract group name';
$string['configgroupnamefilter'] = 'Group name filter';
$string['configgroupnamefilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configgroupcourseattribute'] = 'course group attribute';
$string['configgroupcourseattribute_desc'] = 'LDAP attribute where to find the owning course information';
$string['configgroupcoursefilter'] = 'Course identifier filter';
$string['configgroupcoursefilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configgroupcourseidentifier'] = 'Moodle course identifier';
$string['configgroupcourseidentifier_desc'] = 'Moodle course field to identify the course';
$string['configgroupgroupingattribute'] = 'Attribute for group grouping name';
$string['configgroupgroupingattribute_desc'] = 'Ldap field for finding the grouping identifier. this will be taken as grouping name. If empty, the grouping is NOT evaluated.';
$string['configgroupgroupingfilter'] = 'Filter to extract grouping name';
$string['configgroupgroupingfilter_desc'] = 'A regex that applies to value and catchs the first available subpattern';
$string['configgroupnameattribute'] = 'Attribute for group name';
$string['configgroupnameattribute_desc'] = 'Ldap field for the group name';
$string['configgroupnamefilter'] = 'Filter to extract group name';
$string['configgroupnamefilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configgroupdescriptionattribute'] = 'Attribute for description';
$string['configgroupdescriptionattribute_desc'] = 'LDAP field for the group description';
$string['configgroupmembershipattribute'] = 'Attribute for membership';
$string['configgroupmembershipattribute_desc'] = 'Ldap field for finding users in group';
$string['configgroupmembershipfilter'] = 'Filter for membership';
$string['configgroupmembershipfilter_desc'] = 'A regex that applies to value and catches the first available subpattern';
$string['configgroupuseridentifier'] = 'Internal group user identifier';
$string['configgroupuseridentifier_desc'] = '';
$string['configgroupuseridentifierlocked_desc'] = 'Internal user field used as user identifier reference for finding user ID for the group membership.
The value is locked by the auth/ldap configuration current choice for "membership as DN".';
$string['configgroupsprotectformdeletion'] = 'Delete protection';
$string['configgroupsprotectformdeletion_desc'] = 'If enabled, no groups can be deleted using the groups synchronisation';

$string['deletinggroups'] = 'Deleting old groups';
$string['creatinggroups'] = 'Creating new groups';
$string['updatinggroups'] = 'Updating existing groups';
$string['groupdeleted'] = 'Group {$a->name} deleted in course {$a->course}';
$string['groupcreated'] = 'Group [{$a->idnumber}] {$a->name} created in course {$a->courseid}';
$string['groupupdated'] = 'Group [{$a->idnumber}] {$a->name} updated in course {$a->courseid}';
$string['groupmemberadded'] = 'Group member {$a->username} added to group {$a->idnumber} in course {$a->course}';
$string['groupmemberremoved'] = 'Group member {$a->username} removed from group {$a->idnumber} in course {$a->course}';
$string['groupmissinguser'] = 'Error :User {$a->username} is missing for group assignation ';
$string['disableautogroupscheck'] = 'Disable auto group check';
$string['skipmembership'] = 'Skip membership';
$string['skippingmembership'] = 'Skipping membership';
$string['skipmembership_help'] = 'If set, only group info is updated. No members are moved from groups.';

// courses.

$string['configsynccoursecatsenable'] = 'Enable course categories sync';
$string['configcoursecatcontexts'] = 'Contexts for coursecats';
$string['configcoursecatcontexts_desc'] = 'LDAP contexts where to find course category representation. You can give several contexts separated by semi-colons (;)';
$string['configcoursecatselectorfilter'] = 'LDAP filter for course categories';
$string['configcoursecatselectorfilter_desc'] = 'A LDAP filtering expression';
$string['configcoursecatidattribute'] = 'Attribute for category id';
$string['configcoursecatidattribute_desc'] = 'LDAP attribute for course category id';
$string['configcoursecatidnumberattribute'] = 'Attribute for category idnumber';
$string['configcoursecatidnumberattribute_desc'] = 'LDAP attribute for course category idnumber';
$string['configcoursecatidnumberfilter'] = 'Filter for idnumber';
$string['configcoursecatidnumberfilter_desc'] = 'Regexp filter for extracting the idnumber (as the first regexp capture pattern).';
$string['configcoursecatidnumberpattern'] = 'Pattern for the idnumber';
$string['configcoursecatidnumberpattern_desc'] = 'Moodle pattern for the idnumber. Accepts %CCID% placeholder.';
$string['configcoursecatnameattribute'] = 'Attribute for category name';
$string['configcoursecatnameattribute_desc'] = 'LDAP attribute for course category name';
$string['configcoursecatnameisfullpath'] = 'Is the name a full category path ?';
$string['configcoursecatnameisfullpath_desc'] = 'Set this to checked if the LDAP contains full specified category paths separated by slashes.';
$string['configcoursecatparentattribute'] = 'Attribute for category parent identifier';
$string['configcoursecatparentattribute_desc'] = 'LDAP attribute for course category parent idnumber';
$string['configcoursecatparentfilter'] = 'Filter for parent idnumber';
$string['configcoursecatparentfilter_desc'] = 'Regexp filter for extracting the parent idnumber (as the first regexp capture pattern).';
$string['configcoursecatparentpattern'] = 'Pattern for the parent idnumber';
$string['configcoursecatparentpattern_desc'] = 'Moodle pattern for adapting the parent idnumber. Accepts %PCID% placeholder.';
$string['configcoursedefaultcategoryidnumber'] = 'Default category ID number';
$string['configcoursedefaultcategoryidnumber_desc'] = 'If non empty any unresolved course category location will route the course in this category.';

$string['configsynccourseenable'] = 'Enable course sync';
$string['configcoursecontexts'] = 'Contexts for courses';
$string['configcoursecontexts_desc'] = 'LDAP context for courses. You can give several contexts separated by semi-colons (;).';
$string['configcourseselectorfilter'] = 'LDAP filter for courses';
$string['configcourseselectorfilter_desc'] = 'A LDAP filter for selecting courses';
$string['configcoursecategoryattribute'] = 'Attribute for course category';
$string['configcoursecategoryattribute_desc'] = 'LDAP attribute for the course category path';
$string['configcoursecategorypathseparator'] = 'Path separator in course category';
$string['configcoursecategorypathseparator_desc'] = 'Gives the separator that splits the category value into category path parts.';
$string['configcoursecategorysyntaxattribute'] = 'Category path syntax';
$string['configcoursecategorysyntaxattribute_desc'] = 'Choose the syntax of the category path. Composite will expect a path made of idnumber<sep>catname
elements, while simple path just expects a named path. See composite separator setting.';

$string['categorysyntaxcomposite'] = 'Composite syntax';
$string['categorysyntaxsimplepath'] = 'Simple name path syntax';
$string['categorysyntaxdirectid'] = 'Use internal category id (no creation)';
$string['categorysyntaxidnumber'] = 'Use single idnumber (no creation)';
$string['configcourseidattribute'] = 'Attribute for course id';
$string['configcourseidpattern'] = 'Pattern course id';
$string['configcourseidpattern_desc'] = 'Replacement pattern for course id. Accepts %CID% and %ID% placeholders.';
$string['configcourseidattribute_desc'] = 'LDAP attribute for course id';
$string['configcourseidnumberattribute'] = 'Attribute for course idnumber';
$string['configcourseidnumberattribute_desc'] = 'LDAP attribute for course idnumber';
$string['configcourseidnumberfilter'] = 'Filter for course idnumber';
$string['configcourseidnumberfilter_desc'] = 'Regexp filter for extracting the course idnumber (as the first regexp capture pattern).';
$string['configcourseidnumberpattern'] = 'Pattern for course idnumber';
$string['configcourseidnumberpattern_desc'] = 'Moodle pattern for the course idnumber. Accepts %VALUE% generic placeholder.';
$string['configcoursefullnameattribute'] = 'Attribute for course full name';
$string['configcoursefullnameattribute_desc'] = 'LDAP attribute for course full name';
$string['configcoursesummaryattribute'] = 'Attribute for course summary';
$string['configcoursesummaryattribute_desc'] = 'LDAP attribute for course summary';
$string['configcoursevisibleattribute'] = 'Attribute for course visibility';
$string['configcoursevisibleattribute_desc'] = 'LDAP attribute for course visibility. Explicit 0 or false value stands for hidden.';
$string['configcourseshortnameattribute'] = 'Attribute for course shortname';
$string['configcourseshortnameattribute_desc'] = 'LDAP attribute for course shortname';
$string['configcourseshortnamefilter'] = 'Filter for course shortname';
$string['configcourseshortnamefilter_desc'] = 'Regexp filter for extracting the course shortname (as the first regexp capture pattern).';
$string['configcourseshortnamepattern'] = 'Pattern for course shortname';
$string['configcourseshortnamepattern_desc'] = 'Moodle pattern for the course shortname. Accepts %VALUE% generic placeholder.';
$string['configcourseprimarykey'] = 'Course primary key';
$string['configcourseprimarykey_desc'] = 'Primary key for course identity matching.';
$string['configcoursetemplateattribute'] = 'Attribute for course template';
$string['configcoursetemplateattribute_desc'] = 'LDAP attribute for course template name or significant part of name. If prefixed with "shortname:",
the value will designate a full shortname and will not patternized. Same with "idnumber:" prefix.';
$string['configcoursetemplatefilter'] = 'Filter for course template';
$string['configcoursetemplatefilter_desc'] = 'Regexp filter for extracting the course template significant part (as the first regexp capture pattern).';
$string['configcoursetemplatepattern'] = 'Pattern for course template';
$string['configcoursetemplatepattern_desc'] = 'Moodle pattern for the course idnumber. Accepts %TPL% placeholder for placing the template significant part.';
$string['configcoursetemplatedefault'] = 'Default course template';
$string['configcoursetemplatedefault_desc'] = 'A default course shortname or path location that will be used as template if the value is "default".';
$string['deletingcourses'] = 'Deleting courses';
$string['updatingcourses'] = 'Updating courses';
$string['creatingcourses'] = 'Creating courses';
$string['configcourseuserkey'] = 'Internal field for user';
$string['configcourseuserkey_desc'] = 'Moodle internal field for matching users in memberships, teachers or editing teachers.';
$string['configcourseenrolmethod'] = 'Enrol method for course operations';
$string['configcourseenrolmethod_desc'] = 'If defined, will enrol users with required method in addition to role setting. This applies only in course context.';
$string['configcourseeditingteachersattribute'] = 'Attribute for course editing teachers';
$string['configcourseeditingteachersattribute_desc'] = 'LDAP attribute for course editing teachers as a list of user identifiers.';
$string['configcourseteachersattribute'] = 'Attribute for course teachers';
$string['configcourseteachersattribute_desc'] = 'LDAP attribute for course teachers as a list of user identifiers.';
$string['configcourseteachersfilter'] = 'Filter for extracting teacher identifier';
$string['configcourseteachersfilter_desc'] = 'A pattern matcher (capturing first subpattern) to extract the primary identifier of a teacher.';
$string['configcoursemembershipfilter'] = 'Filter for extracting user identifier';
$string['configcoursemembershipfilter_desc'] = 'A pattern matcher (capturing first subpattern) to extract the primary identifier of the user (defined in standard LDAP settings).';
$string['configcoursemembershipdereferenceattribute'] = 'User membership dereference attribute';
$string['configcoursemembershipdereferenceattribute_desc'] = 'If set, the membership value is dereferenced using a secondary query to get an indirect atttribute in the DN record.';
$string['configcoursemembershipcohortdetector'] = 'Cohort detector';
$string['configcoursemembershipcohortdetector_desc'] = 'A pattern matcher testing if the membership relates to a cohort (alternatively is a single user membership). If empty, will never try to detect members as cohorts.';
$string['configcoursemembershipcohortfilter'] = 'Filter for extracting cohort identifier';
$string['configcoursemembershipcohortfilter_desc'] = 'A pattern matcher (capturing first subpattern) to extract the primary identifier of a enrolled cohort (defined in the cohort section of the ENT installer settings).';
$string['configcoursehardcohortunenrol'] = 'Unenrol cohort mode';
$string['configcoursehardcohortunenrol_desc'] = 'What will happen when a cohort is unenrolled from course. When using soft method, enrol method is disabled and enrolments are kept with all user data and group assignations. When using hard unenrol, method is destroyed and all relevant membership so are user data in course.';
$string['softcohortunenrol'] = 'Soft cohort unenrol (disable but not delete)';
$string['hardcohortunenrol'] = 'Hard cohort unenrol (delete method)';
$string['categorysyntaxcomposite'] = 'Composite syntax';
$string['categorysyntaxsimplepath'] = 'Simple name path';
$string['coursedeleted'] = 'Course {$a} deleted.';
$string['coursecreated'] = 'Course {$a->name} created with id {$a->id}.';
$string['coursecreationerror'] = 'ERROR: Course {$a->name} creation failed with error {$a->id}.';
$string['courseupdated'] = 'Course {$a->name} with id {$a->id} updated.';
$string['settingsusers'] = 'Users sync settings';
$string['settingscourses'] = 'Course sync settings';
$string['settingscohorts'] = 'Cohorts sync settings';
$string['settingsroleassigns'] = 'Role assigns sync settings';
$string['settingscoursegroups'] = 'Course groups settings';
$string['settingsstructures'] = 'Information about structures';
$string['ldapfilters'] = 'LDAP Filters';

// Structures.

$string['configstructurecity'] = 'Structure city';
$string['configstructurecity_desc'] = 'LDAP attribute holding the structure city';
$string['configstructurecityfilter'] = 'LDAP filter for current city';
$string['configstructurecityfilter_desc'] = 'Filter pattern for searching by city';
$string['configstructurecontext'] = 'LDAP context';
$string['configstructurecontext_desc'] = 'LDAP context where to find structures';
$string['configstructureid'] = 'ID';
$string['configstructureid_desc'] = 'LDAP attribute holding the structure ID';
$string['configstructurename'] = 'Current name';
$string['configstructurename_desc'] = 'LDAP attribute holding the structure name';
$string['configstructurenamefilter'] = 'LDAP filter for current name';
$string['configstructurenamefilter_desc'] = 'Filter pattern for searching by name';
$string['configstructureaddress'] = 'Current address';
$string['configstructureaddress_desc'] = 'LDAP attribute holding the structure address';
$string['configstructuregeoloc'] = 'Geolocation';
$string['configstructuregeoloc_desc'] = 'LDAP attribute holding the structure geolocation';

$string['relocateteachercourses_help'] = '
Relocating teacher courses will move courses belonging (in edition) to a single teacher to his
standard owned category. This affects all courses in moodle complying the ownership rule and not
in a protected category (See ENT installer global settings).
';

<<<<<<< HEAD
$string['plugindist_desc'] = '
<p>This plugin is the community version and is published for anyone to use as is and check the plugin\'s
core application. A "pro" version of this plugin exists and is distributed under conditions to feed the life cycle, upgrade, documentation
and improvement effort.</p>
<p>Note that both components local_sharedresources and mod_sharedresource must work using the same distribution level.</p>
<p>Please contact one of our distributors to get "Pro" version support.</p>
<p><a href="http://www.mylearningfactory.com/index.php/documentation/Distributeurs?lang=en_utf8">MyLF Distributors</a></p>';
=======
require(__DIR__.'/pro_additional_strings.php');
>>>>>>> MOODLE_39_STABLE
